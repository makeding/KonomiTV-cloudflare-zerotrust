import{d as a,m as n,l as p,_ as m,g as d,b as c,k as u}from"./index-BhBe4R2M.js";import{W as l,P as h}from"./PlayerController-u3G2CUWY.js";import{V as f,u as _}from"./CaptureManager-Bni_-djs.js";import"./ChannelsStore-BitPjBk-.js";import"./ssrBoot-ii4gEpuF.js";import"./VDialog-Ds-IGaIM.js";import"./VChip-CUcpD1EQ.js";import"./VTextField-DjSiZMjN.js";import"./VAvatar-VJ29M_GL.js";import"./VCard-DIY1gnO1.js";import"./VSlider-CvkDkuNN.js";import"./swiper-C3rX7ZzL.js";import"./CommentMuteSettings-WDL2P6Tf.js";import"./VSelect-CfTaoZi3.js";import"./vuedraggable.umd-DeHXCxxE.js";import"./Twitter-BY62He3g.js";import"./PlayerUtils-DvsnJsyj.js";let t=null;const y=a({name:"Video-Watch",components:{Watch:l},computed:{...n(_,p)},created(){this.init()},beforeRouteUpdate(o,r,e){this.destroy().then(()=>this.init()),e()},beforeUnmount(){this.destroy()},methods:{async init(){if(this.$route.params.video_id===void 0){this.$router.push({path:"/not-found/"});return}const o=await f.fetchVideo(parseFloat(this.$route.params.video_id));if(o===null){this.$router.push({path:"/not-found/"});return}this.playerStore.recorded_program=o,t=new h("Video"),await t.init()},async destroy(){t!==null&&(await t.destroy(),t=null)}}});function $(o,r,e,i,W,V){const s=u("Watch",!0);return c(),d(s,{playback_mode:"Video"})}const D=m(y,[["render",$]]);export{D as default};
